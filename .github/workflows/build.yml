name: GitHub Actions & Netch CI

on: [push]

jobs:
  build:
    name: Build
    runs-on: windows-latest
       
    steps:   
    - uses: actions/checkout@v2
      
    - name: Get tag name
      uses: olegtarasov/get-tag@v1

    - name: submodules-init
      uses: snickerbockers/submodules-init@v4
  
    - uses: nuget/setup-nuget@v1
    - run: nuget restore Netch.sln
     
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    - name: Build .NET 4.8 Netch
      shell: pwsh
      run: |
        .\build.ps1
        New-Item -ItemType Directory -Path C:\builtfiles -Force > $null
        Compress-Archive -Path Netch\bin\x64\Release\win-x64\* -DestinationPath C:\builtfiles\Netch-${{ env.GITHUB_TAG_NAME }}.zip
        echo "::set-env name=Netch_SHA256::$(.\getSHA256.ps1 C:\builtfiles\Netch-${{ env.GITHUB_TAG_NAME }}.zip)"

    - name: Upload Netch
      uses: actions/upload-artifact@v1
      with:
        name: Netch
        path: Netch\bin\x64\Release\win-x64

     # Create a new release: create a tag, then 'git push origin <tagname>', wait for it to build      
    - name: Create a new GitHub release if a new tag is pushed
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.GITHUB_TAG_NAME }}
        prerelease: true
        draft: false
        files: |
          C:\builtfiles\Netch-${{ env.GITHUB_TAG_NAME }}.zip
        body: |
          
          [![](https://img.shields.io/badge/Telegram-Channel-blue)](https://t.me/Netch) [![](https://img.shields.io/badge/Telegram-Group-green)](https://t.me/Netch_Discuss_Group)
          
          ## 更新日志：
          * 这是 GitHub Action 自动化部署，更新日志应该很快会手动更新:D
          
          ## 文件校验
          | 文件名 | SHA256 |
          | :- | :- |
          | <sub>Netch-${{ env.GITHUB_TAG_NAME }}.zip</sub> | <sub>${{ env.Netch_SHA256 }}</sub> |
      if: startsWith(github.ref, 'refs/tags/')
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
